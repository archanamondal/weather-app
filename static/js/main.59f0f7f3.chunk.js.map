{"version":3,"sources":["assets/Spinner.gif","App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherDetails","setWeatherDetails","loading","setLoading","getWeatherDetails","cityname","a","axios","get","process","response","data","console","error","useEffect","className","src","loader","alt","main","temp","name","day","moment","unix","dt","format","getDateAndTime","weather","type","onClick","clouds","all","humidity","wind","speed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59f0f7f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spinner.70b56022.gif\";","import React, {useEffect, useState} from \"react\";\nimport { FaCloud } from \"react-icons/fa\";\nimport { FiSearch } from \"react-icons/fi\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport loader from \"../src/assets/Spinner.gif\";\nimport \"./App.css\";\n\n\nfunction App() {\n  const [weatherDetails, setWeatherDetails] = useState({});\n  const [loading, setLoading] = useState(true);\n  const getWeatherDetails = async (cityname) =>{\n    setLoading(true);\n    try {\n      const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=${process.env.REACT_APP_API_KEY}&units=metric`);\n      setWeatherDetails(response.data);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  }\n  const getDateAndTime = () =>{\n    const day = moment.unix(weatherDetails.dt);\n    return (day.get(\"hour\")+\":\" + day.get(\"minute\") + \" \" +day.format(\"dddd\") + \", \" +day.get(\"date\") + \" \" + day.format(\"MMM\") + \" \" + day.format(\"YY\") );\n  }\n  useEffect(() => {\n    setLoading(true);\n    getWeatherDetails(\"Siuri\");\n  }, []);\n\n  if(loading){\n    return(\n      <div className=\"loading-box\">\n        <img className=\"loading-img\" src={loader} alt=\"\" />\n      </div>\n    );\n  }\n\n  return (\n    <>\n    <div className=\"background\">\n      <div className=\"content\">\n        <div className=\"title-box\">\n          <h3 className=\"title\">the.weather</h3>\n        </div>\n\n        <div className=\"weather-box\">\n          <div className=\"temperature-box\">\n            <h1 className=\"temp-value\">{weatherDetails.main.temp ?? \"\"}</h1>{\" \"}\n            <h1 className=\"degree\">\n              <sup> {\"\\u00B0\"} </sup>\n            </h1>\n          </div>\n\n          <div className=\"city-name-box\">\n            <div className=\"location\">\n              <h1 className=\"city\">{weatherDetails.name}</h1>\n            </div>\n            <div className=\"date-time-box\">\n              <h3 className=\"datetime\">{getDateAndTime()}</h3>\n            </div>\n          </div>\n          <div className=\"icon-box\">\n            <FaCloud className=\"weather-icon\"/>\n          <h3 className=\"weather-type\">{weatherDetails.weather[0].main}</h3>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"sidebar\">\n        <div className=\"search-box\">\n          <input className=\"searchbar\" type=\"Enter city name\" />\n          <button className=\"btn\">\n            <FiSearch className=\"search-icon\"/>\n          </button>\n        </div>\n\n        <div className=\"city-list\">\n        <h2 className=\"another-location\">Another Location</h2>\n        <hr/>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"darjeeling\")}>Darjeeling</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"durgapur\")}>Durgapur</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"hooghly\")}>Hooghly</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"kolkata\")}>Kolkata</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"malda\")}>Malda</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"bolpur\")}>Bolpur</p>\n          <p className=\"city-loc\" onClick={()=>getWeatherDetails(\"siuri\")}>Siuri</p>\n        </div>\n        <hr className=\"hr\"/>\n\n        <div className=\"weather-details\">\n          <h2 className=\"weather\">Weather Details</h2>\n          <div className=\"weather-name\">\n            <p className=\"text\">Cloudy</p>\n            <p className=\"text\">{weatherDetails.clouds.all}%</p>\n          </div>\n          <div className=\"weather-name\">\n            <p className=\"text\">Humidity</p>\n            <p className=\"text\">{weatherDetails.main.humidity}%</p>\n          </div>\n          <div className=\"weather-name\">\n            <p className=\"text\">Wind</p>\n            <p className=\"text\">{weatherDetails.wind.speed}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}